#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# Support module generated by PAGE version 4.26
#  in conjunction with Tcl version 8.6
#    Dec 24, 2019 03:44:21 PM PST  platform: Windows NT

import sys
import math

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True


def set_Tk_var():
    global inputDiam
    inputDiam = tk.StringVar()
    global inputSfpm
    inputSfpm = tk.StringVar()
    global inputFlutes
    inputFlutes = tk.StringVar()
    inputFlutes.set(4)
    global inputIpt
    inputIpt = tk.StringVar()
    inputIpt.set(.003)
    global percStep
    percStep = tk.DoubleVar()
    percStep.set(4)
    global downStep
    downStep = tk.DoubleVar()
    global rpm
    rpm = tk.StringVar()
    global ipm
    ipm = tk.StringVar()
    global rctipm
    rctipm = tk.StringVar()
    global rctipt
    rctipt = tk.StringVar()
    global stepovar
    stepovar = tk.StringVar()
    global stepdvar
    stepdvar = tk.StringVar()
    global mrrvar
    mrrvar = tk.DoubleVar()



def calculate(self):
    _dia = float(inputDiam.get())
    _sfpm = float(inputSfpm.get())
    _ipt = float(inputIpt.get())
    _flutes = int(inputFlutes.get())
    rpm.set(round((_sfpm * 3.82) / _dia))   # calc RPM
    _rpm = float(rpm.get())
    ipm.set(round((_ipt * _flutes * _rpm), 1))  # calc Feed Rate
    _ipm = float(ipm.get())
    stepovar.set(round((float(inputDiam.get()) * (float(percStep.get())) * .01), 4))
    _step = float(stepovar.get())
    stepdvar.set(round(float(inputDiam.get()) * downStep.get(), 2))
    _down = float(stepdvar.get())
    rctipt.set(round((_ipt * _dia) / (2 * math.sqrt((_dia * _step)-(_step*_step))), 4))
    _rctipt = float(rctipt.get())
    rctipm.set(round((_rctipt * _flutes) * _rpm))
    _rctipm = float(rctipm.get())
    _mrr = mrrvar.set(round((_step * _down) * _rctipm, 2))
    sys.stdout.flush()


def set_stepd(*args):
    stepdvar.set(round(float(inputDiam.get()) * downStep.get(), 2))
    calculate(self=None)
    sys.stdout.flush()


def set_stepo(*args):
    stepovar.set(round((float(inputDiam.get()) * (float(percStep.get())) * .01), 4))  # set step over variable value
    calculate(self=None)
    sys.stdout.flush()


def init(top, gui, *args, **kwargs):
    global w, top_level, root
    w = gui
    top_level = top
    root = top


def destroy_window():
    # Function which closes the window.
    global top_level
    top_level.destroy()
    top_level = None


if __name__ == '__main__':
    import SuperDuper
    SuperDuper.vp_start_gui()




